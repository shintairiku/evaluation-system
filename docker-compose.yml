# Use .env.local for environment variables
# Docker Compose will read from .env.local if it exists, falling back to .env

services:
  frontend:
    build:
      context: ./frontend
      target: development
      args:
        - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
        - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
        - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
        - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    env_file:
      - .env.local
      - .env
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      # API URLs for dual context (browser vs server)
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
      - API_BASE_URL_SERVER=http://backend:8000

  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env.local
      - .env
    environment:
      - DATABASE_URL=${SUPABASE_DATABASE_URL}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - CLERK_ISSUER=${CLERK_ISSUER}
      - CLERK_AUDIENCE=${CLERK_AUDIENCE}
      - CLERK_WEBHOOK_SECRET=${CLERK_WEBHOOK_SECRET}
      - CLERK_ORGANIZATION_ENABLED=${CLERK_ORGANIZATION_ENABLED}
      - DEBUG=${DEBUG}
      - LOG_LEVEL=${LOG_LEVEL} 