name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest
    name: Lint and Type Check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run ESLint
      working-directory: ./frontend
      run: npm run lint

    - name: Run TypeScript check
      working-directory: ./frontend
      run: npx tsc --noEmit

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run unit tests
      working-directory: ./frontend
      run: npm run test:ci

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        flags: frontend
        name: frontend-coverage

  integration-tests:
    runs-on: ubuntu-latest
    name: Integration Tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run integration tests
      working-directory: ./frontend
      run: npm run test:ci -- --testPathPattern=integration

  e2e-tests:
    runs-on: ubuntu-latest
    name: E2E Tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Install Playwright browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps

    - name: Build application
      working-directory: ./frontend
      run: npm run build

    - name: Run E2E tests
      working-directory: ./frontend
      run: npm run e2e

    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-test-results
        path: frontend/test-results/
        retention-days: 7

    - name: Upload E2E report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-report
        path: frontend/playwright-report/
        retention-days: 7

  build:
    runs-on: ubuntu-latest
    name: Build Application
    needs: [lint-and-typecheck, unit-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build application
      working-directory: ./frontend
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: frontend/.next/
        retention-days: 7

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run security audit
      working-directory: ./frontend
      run: npm audit --audit-level=moderate

    - name: Run dependency check
      working-directory: ./frontend
      run: npx depcheck

  performance-test:
    runs-on: ubuntu-latest
    name: Performance Tests
    needs: [build]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: frontend/.next/

    - name: Run Lighthouse CI
      working-directory: ./frontend
      run: lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  accessibility-test:
    runs-on: ubuntu-latest
    name: Accessibility Tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Install Playwright browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps

    - name: Run accessibility tests
      working-directory: ./frontend
      run: npm run test:a11y

    - name: Upload accessibility report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: accessibility-report
        path: frontend/a11y-report/
        retention-days: 7

    - name: Upload accessibility results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: accessibility-results
        path: frontend/a11y-results/
        retention-days: 7

  quality-gate:
    runs-on: ubuntu-latest
    name: Quality Gate
    needs: [lint-and-typecheck, unit-tests, integration-tests, e2e-tests, security-scan, accessibility-test]
    if: always()

    steps:
    - name: Check all jobs status
      run: |
        if [[ "${{ needs.lint-and-typecheck.result }}" != "success" ]]; then
          echo "Lint and type check failed"
          exit 1
        fi
        if [[ "${{ needs.unit-tests.result }}" != "success" ]]; then
          echo "Unit tests failed"
          exit 1
        fi
        if [[ "${{ needs.integration-tests.result }}" != "success" ]]; then
          echo "Integration tests failed"
          exit 1
        fi
        if [[ "${{ needs.e2e-tests.result }}" != "success" ]]; then
          echo "E2E tests failed"
          exit 1
        fi
        if [[ "${{ needs.security-scan.result }}" != "success" ]]; then
          echo "Security scan failed"
          exit 1
        fi
        if [[ "${{ needs.accessibility-test.result }}" != "success" ]]; then
          echo "Accessibility tests failed"
          exit 1
        fi
        echo "All quality checks passed!"